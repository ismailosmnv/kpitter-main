// src/components/PostDetail.jsx

import React, { useEffect, useState } from 'react';
import { useParams, Link } from 'react-router-dom';
import { getPostDetail, likePost, unlikePost } from '../api';
import './PostDetail.css'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã–µ —Å—Ç–∏–ª–∏

function PostDetail() {
  const { id } = useParams(); // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ id –ø–æ—Å—Ç–∞
  const [post, setPost] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    async function fetchPost() {
      try {
        const data = await getPostDetail(id);
        setPost(data);
      } catch (err) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞:', err.message);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å—Ç');
      } finally {
        setIsLoading(false);
      }
    }
    fetchPost();
  }, [id]);

  async function handleLike() {
    if (!post) return;
    try {
      if (post.is_liked) {
        await unlikePost(id);
      } else {
        await likePost(id);
      }
      const updatedPost = await getPostDetail(id);
      setPost(updatedPost);
    } catch (err) {
      console.error('[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–∞–π–∫–µ:', err.message);
    }
  }

  if (isLoading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–∞...</p>;
  if (error) return <p className="error-message">{error}</p>;
  if (!post) return <p>–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω</p>;

  return (
    <div className="post-detail container">
      <h2>
        –ü–æ—Å—Ç –æ—Ç{" "}
        <Link to={`/user/${post.author.username}/`} className="user-link">
          {post.author.username}
        </Link>
      </h2>
      <p>{post.content}</p>
      <button 
        onClick={handleLike} 
        className={`like-btn ${post.is_liked ? 'liked' : ''}`}
      >
        {post.is_liked ? '‚ù§Ô∏è –£–±—Ä–∞—Ç—å –ª–∞–π–∫' : 'ü§ç –õ–∞–π–∫'} ({post.likes})
      </button>
    </div>
  );
}

export default PostDetail;